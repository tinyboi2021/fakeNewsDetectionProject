version: '3.8'

services:
  # Main application service
  fake-news-detector:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fake_news_app
    ports:
      - "${APP_PORT:-8000}:8000"
    environment:
      - FLASK_ENV=${FLASK_ENV:-production}
      - MODEL_NAME=${MODEL_NAME:-roberta-base}
      - CACHE_SIZE=${CACHE_SIZE:-100}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      # Mount model cache to persist downloaded models
      - model_cache:/app/.cache/transformers
      - huggingface_cache:/app/.cache/huggingface
      # Mount logs directory
      - ./logs:/app/logs
      # Mount data directory if you have local datasets
      - ./data:/app/data:ro
    networks:
      - fake-news-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis for caching predictions
  redis:
    image: redis:7-alpine
    container_name: fake_news_redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - fake-news-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: fake_news_nginx
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - fake-news-detector
    networks:
      - fake-news-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  model_cache:
    driver: local
  huggingface_cache:
    driver: local
  redis_data:
    driver: local

networks:
  fake-news-network:
    driver: bridge
